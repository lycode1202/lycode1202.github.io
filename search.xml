<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git分布式版本控制工具</title>
      <link href="/2022/03/06/git-fen-bu-shi-ban-ben-kong-zhi-gong-ju/"/>
      <url>/2022/03/06/git-fen-bu-shi-ban-ben-kong-zhi-gong-ju/</url>
      
        <content type="html"><![CDATA[<h2 id="Git分布式版本控制工具"><a href="#Git分布式版本控制工具" class="headerlink" title="Git分布式版本控制工具"></a>Git分布式版本控制工具</h2><h2 id="1-、目标"><a href="#1-、目标" class="headerlink" title="1 、目标"></a>1 、目标</h2><ul><li>了解Git基本概念</li><li>能够概述git工作流程</li><li>能够使用Git常用命令</li><li>熟悉Git代码托管服务</li><li>能够使用idea操作git</li></ul><h2 id="2-、概述"><a href="#2-、概述" class="headerlink" title="2 、概述"></a>2 、概述</h2><h3 id="2-1、开发中的实际场景"><a href="#2-1、开发中的实际场景" class="headerlink" title="2.1、开发中的实际场景"></a>2.1、开发中的实际场景</h3><pre><code>场景一：备份小明负责的模块就要完成了，就在即将Release之前的一瞬间，电脑突然蓝屏，硬盘光荣牺牲！几个月来的努力付之东流场景二：代码还原这个项目中需要一个很复杂的功能，老王摸索了一个星期终于有眉目了，可是这被改得面目全非的代码已经回不到从前了。什么地方能买到哆啦A梦的时光机啊？场景三：协同开发小刚和小强先后从文件服务器上下载了同一个文件：Analysis.java。小刚在Analysis.java文件中的第 30 行声明了一个方法，叫count()，先保存到了文件服务器上；小强在Analysis.java文件中的第 50 行声明了一个方法，叫sum()，也随后保存到了文件服务器上，于是，count()方法就只存在于小刚的记忆中了场景四：追溯问题代码的编写人和编写时间！老王是另一位项目经理，每次因为项目进度挨骂之后，他都不知道该扣哪个程序员的工资！就拿这次来说吧，有个Bug调试了 30 多个小时才知道是因为相关属性没有在应用初始化时赋值！可是二胖、王东、刘流和正经牛都不承认是自己干的！</code></pre><h3 id="2-2、版本控制器的方式"><a href="#2-2、版本控制器的方式" class="headerlink" title="2.2、版本控制器的方式"></a>2.2、版本控制器的方式</h3><pre><code>a、集中式版本控制工具集中式版本控制工具，版本库是集中存放在中央服务器的，team里每个人work时从中央服务器下载代码，是必须联网才能工作，局域网或互联网。个人修改后然后提交到中央版本库。举例：SVN和CVSb、分布式版本控制工具分布式版本控制系统没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样工作的时候，无需要联网了，因为版本库就在你自己的电脑上。多人协作只需要各自的修改推送给对方，就能互相看到对方的修改了。举例：Git</code></pre><h3 id="2-3、SVN"><a href="#2-3、SVN" class="headerlink" title="2.3、SVN"></a>2.3、SVN</h3><p><img src="C:\Users\liyi0\AppData\Roaming\Typora\typora-user-images\image-20220306182853761.png" alt="SVN"></p><h3 id="2-4、Git"><a href="#2-4、Git" class="headerlink" title="2.4、Git"></a>2.4、Git</h3><pre><code>    Git是分布式的,Git不需要有中心服务器，我们每台电脑拥有的东西都是一样的。我们使用Git并且有个中心服务器，仅仅是为了方便交换大家的修改，但是这个服务器的地位和我们每个人的PC是一样的。我们可以把它当做一个开发者的pc就可以就是为了大家代码容易交流不关机用的。没有它大家一样可以工作，只不过“交换”修改不方便而已。    git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。Git是Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。Linux 内核开源项目有着为数众多的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（ 1991 － 2002年间）。 到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了Linux 内核社区免费使用 BitKeeper 的权力。 这就迫使 Linux 开源社区（特别是 Linux 的缔造者Linus Torvalds）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。 他们对新的系统制订了若干目标：    速度    简单的设计    对非线性开发模式的强力支持（允许成千上万个并行开发的分支）    完全分布式    有能力高效管理类似 Linux 内核一样的超大规模项目（速度和数据量）</code></pre><p><img src="C:\Users\liyi0\AppData\Roaming\Typora\typora-user-images\image-20220306183304090.png" alt="git"></p><h3 id="2-5、Git工作流程图"><a href="#2-5、Git工作流程图" class="headerlink" title="2.5、Git工作流程图"></a>2.5、Git工作流程图</h3><p><img src="C:\Users\liyi0\AppData\Roaming\Typora\typora-user-images\image-20220306183454176.png" alt="image-20220306183454176"></p><p>命令如下：</p><pre><code>1. clone（克隆）: 从远程仓库中克隆代码到本地仓库2. checkout（检出）:从本地仓库中检出一个仓库分支然后进行修订3. add（添加）: 在提交前先将代码提交到暂存区4. commit（提交）: 提交到本地仓库。本地仓库中保存修改的各个历史版本5. fetch (抓取) ： 从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。6. pull (拉取) ： 从远程库拉到本地库，自动进行合并(merge)，然后放到到工作区，相当于fetch+merge7. push（推送） : 修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库</code></pre><h2 id="3-、Git安装与常用命令"><a href="#3-、Git安装与常用命令" class="headerlink" title="3 、Git安装与常用命令"></a>3 、Git安装与常用命令</h2><p>本教程里的git命令例子都是在Git Bash中演示的，会用到一些基本的linux命令，在此为大家提前列举：</p><pre><code>ls/ll         查看当前目录cat         查看文件内容touch         创建文件vi/vi编辑器 （使用vi编辑器是为了方便展示效果，学员可以记事本、editPlus、notPad++等其它编辑器）</code></pre><h3 id="3-1、-Git环境配置"><a href="#3-1、-Git环境配置" class="headerlink" title="3.1、 Git环境配置"></a>3.1、 Git环境配置</h3><p>3.1.1 下载与安装</p><p>下载地址： <a href="https://git-scm.com/download">https://git-scm.com/download</a></p><p>双击下载的安装文件来安装Git。安装完成后在电脑桌面（也可以是其他目录）点击右键，如果能够看<br>到如下两个菜单则说明Git安装成功。</p><p><strong>备注：</strong></p><p>Git GUI：Git提供的图形界面工具</p><p>Git Bash：Git提供的命令行工具</p><p>当安装Git后首先要做的事情是设置用户名称和email地址。这是非常重要的，因为每次Git提交都会使用该用户信息</p><p><strong>3.1.2基本配置</strong></p><ol><li><p>打开Git Bash</p></li><li><p>设置用户信息</p></li><li><p>查看配置信息</p><pre><code>git config --global user.name “itcast”git config --global user.email “hello@itcast.cn”git config --list</code></pre></li></ol><p><strong>3.1.3 为常用指令配置别名（可选）</strong></p><p>有些常用的指令参数非常多，每次都要输入好多参数，我们可以使用别名。</p><ol><li>打开用户目录，创建.bashrc文件</li></ol><p>部分windows系统不允许用户创建点号开头的文件，可以打开gitBash,执行 touch ~/.bashrc</p><ol start="2"><li><p>在.bashrc文件中输入如下内容：</p><pre><code>#用于输出git提交日志alias git-log='git log --pretty=oneline --all --graph --abbrev-commit'#用于输出当前目录所有文件及基本信息alias ll='ls -al'</code></pre></li><li><p>打开gitBash，执行source ~/.bashrc</p></li></ol><p><strong>3.1.4 解决GitBash乱码问题</strong></p><ol><li><p>打开GitBash执行下面命令</p><pre><code>git config --global core.quotepath false</code></pre></li><li><p>${git_home}/etc/bash.bashrc 文件最后加入下面两行</p><pre><code>export LANG="zh_CN.UTF-8"export LC_ALL="zh_CN.UTF-8"</code></pre></li></ol><h3 id="3-2、获取本地仓库"><a href="#3-2、获取本地仓库" class="headerlink" title="3.2、获取本地仓库"></a>3.2、获取本地仓库</h3><p>要使用Git对我们的代码进行版本控制，首先需要获得本地仓库</p><p>1 ）在电脑的任意位置创建一个空目录（例如test）作为我们的本地Git仓库</p><p>2 ）进入这个目录中，点击右键打开Git bash窗口</p><p>3 ）执行命令git init</p><p>4 ）如果创建成功后可在文件夹下看到隐藏的.git目录。</p><p><img src="C:\Users\liyi0\AppData\Roaming\Typora\typora-user-images\image-20220306184335987.png" alt="image-20220306184335987"></p><h3 id="3-3、基础操作指令"><a href="#3-3、基础操作指令" class="headerlink" title="3.3、基础操作指令"></a>3.3、基础操作指令</h3><p>Git工作目录下对于文件的 <strong>修改</strong> (增加、删除、更新)会存在几个状态，这些 <strong>修改</strong> 的状态会随着我们执行Git<br>的命令而发生变化。</p><p><img src="C:\Users\liyi0\AppData\Roaming\Typora\typora-user-images\image-20220306184514824.png" alt="image-20220306184514824"></p><p><strong>本章节主要讲解如何使用命令来控制这些状态之间的转换：</strong></p><ol><li>git add (工作区 –&gt; 暂存区)</li><li>git commit (暂存区 –&gt; 本地仓库)</li></ol><p><strong>3.3.1、*查看修改的状态（status）</strong></p><ul><li>作用：查看的修改的状态（暂存区、工作区）</li><li>命令形式：git status</li></ul><p><strong>3.3.2、*添加工作区到暂存区(add)</strong></p><ul><li><p>作用：添加工作区一个或多个文件的修改到暂存区</p></li><li><p>命令形式：git add 单个文件名|通配符 将所有修改加入暂存区：</p><pre><code>git add .</code></pre></li></ul><p><strong>3.3.3、*提交暂存区到本地仓库(commit)</strong></p><ul><li>作用：提交暂存区内容到本地仓库的当前分支</li><li>命令形式：git commit -m ‘注释内容’</li></ul><p><img src="C:\Users\liyi0\AppData\Roaming\Typora\typora-user-images\image-20220306185212856.png" alt="image-20220306185212856"></p><p><strong>3.3.4、*查看提交日志(log)</strong></p><pre><code>git-log</code></pre><p><strong>在3.1.3中配置的别名</strong> git <strong>-</strong> log <strong>就包含了这些参数，所以后续可以直接使用指令</strong> git-log</p><ul><li>作用:查看提交记录</li><li>命令形式：git log [option]<ul><li>options<ul><li>–all 显示所有分支</li><li>–pretty=oneline 将提交信息显示为一行</li><li>–abbrev-commit 使得输出的commitId更简短</li><li>–graph 以图的形式显示</li></ul></li></ul></li></ul><p><strong>3.3.5、版本回退</strong></p><ul><li>作用：版本切换</li><li>命令形式：git reset –hard commitID<ul><li>commitID 可以使用git-log或git log指令查看</li></ul></li><li>如何查看已经删除的记录？<ul><li>git reflog</li><li>这个指令可以看到已经删除的提交记录</li></ul></li></ul><p><strong>3.3.6、添加文件至忽略列表</strong></p><p>一般我们总会有些文件无需纳入Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。下面是一个示例：</p><p><strong>练习:基础操作</strong></p><pre><code># no .a files*.a# but do track lib.a, even though you're ignoring .a files above!lib.a# only ignore the TODO file in the current directory, not subdir/TODO/TODO# ignore all files in the build/ directorybuild/# ignore doc/notes.txt, but not doc/server/arch.txtdoc/*.txt# ignore all .pdf files in the doc/ directorydoc/**/*.pdf</code></pre><pre><code>#####################仓库初始化####################### 创建目录（git_test01）并在目录下打开gitbash略# 初始化git仓库git init#####################创建文件并提交###################### 目录下创建文件 file01.txt略# 将修改加入暂存区git add .# 将修改提交到本地仓库，提交记录内容为：commit 001git commit -m 'commit 001'# 查看日志git log####################修改文件并提交####################### 修改file01的内容为：count=略# 将修改加入暂存区git add.# # 将修改提交到本地仓库，提交记录内容为：update filegit commit --m 'update file01'# 查看日志git log# 以精简的方式显示提交记录git-log####################将最后一次修改还原################### 查看提交记录git-log# 找到倒数第 2 次提交的commitID略# 版本回退git reset commitID --hard</code></pre><h3 id="3-4、分支"><a href="#3-4、分支" class="headerlink" title="3.4、分支"></a>3.4、分支</h3><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p><p><strong>3.4.1、查看本地分支</strong></p><pre><code>命令：git branch</code></pre><p><strong>3.4.2、创建本地分支</strong></p><pre><code>命令：git branch 分支名</code></pre><p><strong>3.4.4、*切换分支(checkout)</strong></p><pre><code>命令：git checkout 分支名</code></pre><p>我们还可以直接切换到一个不存在的分支（创建并切换）</p><pre><code>命令：git checkout -b 分支名</code></pre><p><strong>3.4.6、*合并分支(merge)</strong></p><p>一个分支上的提交可以合并到另一个分支</p><p>命令：git merge 分支名称</p><p><strong>3.4.7、删除分支</strong></p><p><strong>不能删除当前分支，只能删除其他分支</strong></p><p>git branch -d b1 删除分支时，需要做各种检查</p><p>git branch -D b1 不做任何检查，强制删除</p><p><strong>3.4.8、解决冲突</strong></p><p>当两个分支上对文件的修改可能会存在冲突，例如同时修改了同一个文件的同一行，这时就需要手动解<br>决冲突，解决冲突步骤如下：</p><pre><code>1. 处理文件中冲突的地方2. 将解决完冲突的文件加入暂存区(add)3. 提交到仓库(commit)</code></pre><p>冲突部分的内容处理如下所示：</p><p><strong>3.4.9、开发中分支使用原则与流程</strong></p><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的Bug修改、开发新的功能，以免影响开发主线。</p><p>在开发中，一般有如下分支使用原则与流程：</p><pre><code>master （生产） 分支线上分支，主分支，中小规模项目作为线上运行的应用对应的分支；develop（开发）分支是从master创建的分支，一般作为开发部门的主要开发分支，如果没有其他并行开发不同期上线要求，都可以在此版本进行开发，阶段开发完成后，需要是合并到master分支,准备上线。feature/xxxx分支从develop创建的分支，一般是同期并行开发，但不同期上线时创建的分支，分支上的研发任务完成后合并到develop分支。hotfix/xxxx分支，从master派生的分支，一般作为线上bug修复使用，修复完成后需要合并到master、test、develop分支。还有一些其他分支，在此不再详述，例如test分支（用于代码测试）、pre分支（预上线分支）等等。</code></pre><p><strong>练习:分支操作</strong></p><h2 id="4-、Git远程仓库"><a href="#4-、Git远程仓库" class="headerlink" title="4 、Git远程仓库"></a>4 、Git远程仓库</h2><h3 id="4-1、-常用的托管服务-远程仓库"><a href="#4-1、-常用的托管服务-远程仓库" class="headerlink" title="4.1、 常用的托管服务[远程仓库]"></a>4.1、 常用的托管服务[远程仓库]</h3><pre><code>###########################创建并切换到dev01分支，在dev01分支提交# [master]创建分支devgit branch dev# [master]切换到devgit checkout dev# [dev01]创建文件file02.txt略# [dev01]将修改加入暂存区并提交到仓库,提交记录内容为：add file02 on devgit add.git commit -m 'add file02 on dev'# [dev01]以精简的方式显示提交记录git-log###########################切换到master分支，将dev01合并到master分支# [dev01]切换到master分支git checkout master# [master]合并dev01到master分支git merge dev# [master]以精简的方式显示提交记录git-log# [master]查看文件变化(目录下也出现了file02.txt)略##########################删除dev01分支# [master]删除dev01分支git branch -d dev# [master]以精简的方式显示提交记录git-log</code></pre><h3 id="4-2、-注册码云"><a href="#4-2、-注册码云" class="headerlink" title="4.2、 注册码云"></a>4.2、 注册码云</h3><p>要想使用码云的相关服务，需要注册账号（地址： <a href="https://gitee.com/signup">https://gitee.com/signup</a> ）</p><h3 id="4-3、-创建远程仓库"><a href="#4-3、-创建远程仓库" class="headerlink" title="4.3、 创建远程仓库"></a>4.3、 创建远程仓库</h3><pre><code>前面我们已经知道了Git中存在两种类型的仓库，即本地仓库和远程仓库。那么我们如何搭建Git远程仓库呢？我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等。gitHub（ 地址：https://github.com/ ）是一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub码云（地址： https://gitee.com/ ）是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快GitLab （地址： https://about.gitlab.com/ ）是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务,一般用于在企业、学校等内部网络搭建git私服。</code></pre><p>仓库创建完成后可以看到仓库地址，如下图所示:</p><h3 id="4-4、配置SSH公钥"><a href="#4-4、配置SSH公钥" class="headerlink" title="4.4、配置SSH公钥"></a>4.4、配置SSH公钥</h3><p>生成SSH公钥</p><pre><code>ssh-keygen -t rsa不断回车如果公钥已经存在，则自动覆盖Gitee设置账户共公钥获取公钥cat ~/.ssh/id_rsa.pub</code></pre><p>验证是否配置成功</p><pre><code>ssh -T git@gitee.com</code></pre><h3 id="4-5、操作远程仓库"><a href="#4-5、操作远程仓库" class="headerlink" title="4.5、操作远程仓库"></a>4.5、操作远程仓库</h3><p>4.5.1、添加远程仓库</p><p>此操作是先初始化本地库，然后与已创建的远程库进行对接 。</p><pre><code>命令： git remote add &lt;远端名称&gt; &lt;仓库路径&gt;远端名称，默认是origin，取决于远端服务器设置仓库路径，从远端服务器获取此URL例如: git remote add origin git@gitee.com:czbk_zhang_meng/git_test.git</code></pre><p>4.5.2、查看远程仓库</p><pre><code>命令：git remote</code></pre><p>4.5.3、推送到远程仓库</p><pre><code>命令：git push [-f] [--set-upstream] [远端名称 [本地分支名][:远端分支名] ]如果远程分支名和本地分支名称相同，则可以只写本地分支git push origin master-f 表示强制覆盖--set-upstream 推送到远端的同时并且建立起和远端分支的关联关系。git push --set-upstream origin master如果 当前分支已经和远端分支关联 ，则可以省略分支名和远端名。git push 将master分支推送到已关联的远端分支。</code></pre><p>查询远程仓库</p><p>4.5.4、 本地分支与远程分支的关联关系</p><pre><code>查看关联关系我们可以使用 git branch -vv命令</code></pre><p>4.5.5、从远程仓库克隆</p><p>如果已经有一个远端仓库，我们可以直接clone到本地。</p><pre><code>命令: git clone &lt;仓库路径&gt; [本地目录]本地目录可以省略，会自动生成一个目录</code></pre><p>4.5.6、从远程仓库中抓取和拉取</p><p>远程分支和本地的分支一样，我们可以进行merge操作，只是需要先把远端仓库里的更新都下载到本<br>地，再进行操作。</p><pre><code>抓取 命令：git fetch [remote name] [branch name]抓取指令就是将仓库里的更新都抓取到本地，不会进行合并</code></pre><p>如果不指定远端名称和分支名，则抓取所有分支。</p><pre><code>拉取 命令：git pull [remote name] [branch name]拉取指令就是将远端仓库的修改拉到本地并自动进行合并，等同于fetch+merge如果不指定远端名称和分支名，则抓取所有并更新当前分支。1. 在test01这个本地仓库进行一次提交并推送到远程仓库</code></pre><ol start="2"><li>在另一个仓库将远程提交的代码拉取到本地仓库</li></ol><p>4.5.7、解决合并冲突</p><p>在一段时间，A、B用户修改了同一个文件，且修改了同一行位置的代码，此时会发生合并冲突。</p><p>A用户在本地修改代码后优先推送到远程仓库，此时B用户在本地修订代码，提交到本地仓库后，也需要推送到远程仓库，此时B用户晚于A用户， 故需要先拉取远程仓库的提交，经过合并后才能推送到远端分支 ,如下图所示。</p><p>在B用户拉取代码时，因为A、B用户同一段时间修改了同一个文件的相同位置代码，故会发生合并冲突。</p><p>远程分支也是分支，所以合并时冲突的解决方式也和解决本地分支冲突相同相同 ，在此不再赘述，需要学员自己练习。</p><p><strong>练习:远程仓库操作</strong></p><h2 id="5-、在Idea中使用Git"><a href="#5-、在Idea中使用Git" class="headerlink" title="5 、在Idea中使用Git"></a>5 、在Idea中使用Git</h2><h3 id="5-1、在Idea中配置Git"><a href="#5-1、在Idea中配置Git" class="headerlink" title="5.1、在Idea中配置Git"></a>5.1、在Idea中配置Git</h3><pre><code>##########################1-将本地仓库推送到远程仓库# 完成4.1、4.2、4.3、4.4的操作略# [git_test01]添加远程仓库git remote add origin  git@gitee.com/**/**.git# [git_test01]将master分支推送到远程仓库,并与远程仓库的master分支绑定关联关系git push --set-upstream origin master</code></pre><pre><code>###########################2-将远程仓库克隆到本地# 将远程仓库克隆到本地git_test02目录下git clone git@gitee.com/**/**.git git_test# [git_test02]以精简的方式显示提交记录git-log</code></pre><pre><code>###########################3-将本地修改推送到远程仓库# [git_test01]创建文件file03.txt略# [git_test01]将修改加入暂存区并提交到仓库,提交记录内容为：add filegit add.git commit -m 'add file03'# [git_test01]将master分支的修改推送到远程仓库git push origin master</code></pre><pre><code>###########################4-将远程仓库的修改更新到本地# [git_test02]将远程仓库修改再拉取到本地git pull# 以精简的方式显示提交记录git-log# 查看文件变化(目录下也出现了file03.txt)略</code></pre><p>安装好IntelliJ IDEA后，如果Git安装在默认路径下，那么idea会自动找到git的位置，如果更改了Git的安<br>装位置则需要手动配置下Git的路径。选择File→Settings打开设置窗口，找到Version Control下的git选<br>项：</p><p>点击Test按钮,现在执行成功，配置完成</p><h3 id="5-2、在Idea中操作Git"><a href="#5-2、在Idea中操作Git" class="headerlink" title="5.2、在Idea中操作Git"></a>5.2、在Idea中操作Git</h3><p>场景：本地已经有一个项目，但是并不是git项目，我们需要将这个放到码云的仓库里，和其他开发人员<br>继续一起协作开发。</p><p>5.2.1、创建项目远程仓库（参照4.3）</p><p>5.2.2、初始化本地仓库</p><p>5.2.3、设置远程仓库</p><p>5.2.4、提交到本地仓库</p><p>5.2.6、推送到远程仓库</p><p>5.2.7、克隆远程仓库到本地</p><p>5.2.8、创建分支</p><ul><li><p>最常规的方式</p></li><li><p>最强大的的方式</p></li></ul><p>5.2.9、切换分支及其他分支相关操作</p><p>5.2.11、解决冲突</p><ol><li><p>执行merge或pull操作时，可能发生冲突</p><ol start="2"><li>冲突解决后加入暂存区</li><li> 提交到本地仓库</li><li>推送到远程仓库</li></ol></li></ol><h3 id="5-3、IDEA常用GIT操作入口"><a href="#5-3、IDEA常用GIT操作入口" class="headerlink" title="5.3、IDEA常用GIT操作入口"></a>5.3、IDEA常用GIT操作入口</h3><ol><li>第一张图上的快捷入口可以基本满足开发的需求。</li><li>第二张图是更多在IDEA操作git的入口。</li></ol><h3 id="5-4、场景分析"><a href="#5-4、场景分析" class="headerlink" title="5.4、场景分析"></a>5.4、场景分析</h3><p>基于我们后面的实战模式，我们做一个综合练习</p><p>当前的开发环境如下，我们每个人都对这个项目已经开发一段时间，接下来我们要切换成团队开发模式。也就是我们由一个团队来完成这个项目实战的内容。团队有组长和若干组员组成（组长就是开发中的项目经理）。</p><p>所有操作都在idea中完成。</p><p>练习场景如下：</p><p>1 、由组长，基于本项目创建本地仓库；创建远程仓库，推送项目到远程仓库。</p><p>2 、每一位组员从远程仓库克隆项目到idea中,这样每位同学在自己电脑上就有了一个工作副本，可以正式的开始开发了。我们模拟两个组员(组员A、组员B)，克隆两个工作区。</p><p>3 、组员A修改工作区,提交到本地仓库，再推送到远程仓库。组员B可以直接从远程仓库获取最新的代码。</p><p>4 、组员A和组员B修改了同一个文件的同一行，提交到本地没有问题，但是推送到远程仓库时，后一个推送操作就会失败。</p><p>解决方法：需要先获取远程仓库的代码到本地仓库，编辑冲突，提交并推送代码。</p><h2 id="附：几条铁令"><a href="#附：几条铁令" class="headerlink" title="附：几条铁令"></a>附：几条铁令</h2><ol><li><p>切换分支前先提交本地的修改</p></li><li><p>代码及时提交，提交过了就不会丢</p></li><li><p>遇到任何问题都不要删除文件目录，第 1 时间找老师</p></li></ol><h2 id="附：疑难问题解决"><a href="#附：疑难问题解决" class="headerlink" title="附：疑难问题解决"></a>附：疑难问题解决</h2><ol><li><p>windows下看不到隐藏的文件（.bashrc、.gitignore）</p></li><li><p>windows下无法创建.ignore|.bashrc文件</p></li></ol><p>这里以创建.ignore文件为例：</p><pre><code>在git目录下打开gitbash</code></pre><p>执行指令touch .gitignore</p><h2 id="附：IDEA集成GitBash作为Terminal"><a href="#附：IDEA集成GitBash作为Terminal" class="headerlink" title="附：IDEA集成GitBash作为Terminal"></a>附：IDEA集成GitBash作为Terminal</h2><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot2整合Mybatis-plus</title>
      <link href="/2022/03/06/springboot2-zheng-he-mybatis-plus/"/>
      <url>/2022/03/06/springboot2-zheng-he-mybatis-plus/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot整合Redis</title>
      <link href="/2022/03/06/springboot2-zheng-he-redis/"/>
      <url>/2022/03/06/springboot2-zheng-he-redis/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot整合Redis"><a href="#SpringBoot整合Redis" class="headerlink" title="SpringBoot整合Redis"></a>SpringBoot整合Redis</h1><h2 id="添加相关依赖"><a href="#添加相关依赖" class="headerlink" title="添加相关依赖"></a>添加相关依赖</h2><ul><li><p>redis</p></li><li><p>通用池</p></li><li><p>mysql</p></li><li><p>mybatis</p></li><li><p>通用mapper</p></li><li><p>lombok</p></li><li><p>web</p></li><li><p>test</p></li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--        redis--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        web--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        lombok--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        test--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        mysql--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        mybatis--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--        通用mapper--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>tk.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mapper-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>端口</li><li>mysql数据源</li><li>redis数据源</li><li>log</li><li>mybatis</li></ul><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 端口、MySQL数据源、redis、mybatis、log</span><span class="token key atrule">Spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/test<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding</span>=utf8<span class="token important">&amp;allowMultiQueries</span>=true<span class="token important">&amp;serverTimezone</span>=GMT%2B8<span class="token important">&amp;useSSL</span>=false    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver  <span class="token key atrule">jpa</span><span class="token punctuation">:</span>    <span class="token key atrule">show-sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">properties</span><span class="token punctuation">:</span>      <span class="token key atrule">hibernate</span><span class="token punctuation">:</span>        <span class="token key atrule">format_sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8081</span><span class="token key atrule">mybatis</span><span class="token punctuation">:</span>  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>/mybatis/mapper/*.xml  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> cn.kgc.entities<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="业务实现"><a href="#业务实现" class="headerlink" title="业务实现"></a>业务实现</h2><h2 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h2><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2>]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot2消息中间件RabbitMQ</title>
      <link href="/2022/03/06/springboot2-xiao-xi-zhong-jian-jian-rabbitmq/"/>
      <url>/2022/03/06/springboot2-xiao-xi-zhong-jian-jian-rabbitmq/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-matery博客目录结构</title>
      <link href="/2022/03/06/hexo-bo-ke-mu-lu-jie-xi/"/>
      <url>/2022/03/06/hexo-bo-ke-mu-lu-jie-xi/</url>
      
        <content type="html"><![CDATA[<h4 id="目录部分"><a href="#目录部分" class="headerlink" title="目录部分"></a>目录部分</h4><ul><li><code>deploy_git</code>，与<code>git</code>是<strong>git</strong>相关内容，如果无法git到仓库，需要检查git文件夹中配置</li><li><code>scaffolds</code>，存放的是默认生成md文件的配置，其中<code>post.md</code>是默认生成文章的配置</li><li><code>scripts</code>，扩展脚本目录，这里可以自定义一些javascript脚本存放的是页面加载脚本(非默认)</li><li><strong><code>source</code>，hexo源码目录，是核心目录，下面详解</strong></li><li><strong><code>themes</code>，是主题目录，下面详解</strong></li><li><code>packages，</code>是存放看板动画模型的(非默认)</li><li><code>public，</code>是通过hexo g编译出来的最终网页文件，也是部署到github上的文件，输出的静态网页内容目录</li><li><code>node_modules</code>，是hexo的一些库文件</li></ul><h4 id="文件部分"><a href="#文件部分" class="headerlink" title="文件部分"></a>文件部分</h4><ul><li><strong><code>_config.yml</code>，是hexo的全局配置文件(核心配置文件)，一些插件安装后都需在此文件开启</strong></li><li><code>CNAME</code>，可配置个人域名</li><li><code>package.json</code>，应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</li><li><code>main.py</code>，个人快速执行脚本(非默认)</li></ul><h3 id="source目录"><a href="#source目录" class="headerlink" title="source目录"></a>source目录</h3><p><strong>hexo的源码目录，写文章的主要目录</strong></p><pre class="line-numbers language-yaml"><code class="language-yaml">├── _data              <span class="token comment" spellcheck="true"># 存放友链的friends.json和相册的json</span>├── _posts             <span class="token comment" spellcheck="true"># 所有文章就在这里</span>├── 404                <span class="token comment" spellcheck="true"># 404相关</span>├── categories         <span class="token comment" spellcheck="true"># 归档页面</span>├── contact            <span class="token comment" spellcheck="true"># 关于页面</span>├── friends            <span class="token comment" spellcheck="true"># 友联页面</span>├── galleries          <span class="token comment" spellcheck="true"># 相册页面</span>├── images             <span class="token comment" spellcheck="true"># 图片页面，其他图，懒加载图存放位置</span>├── media              <span class="token comment" spellcheck="true"># 多媒体</span>├── tags               <span class="token comment" spellcheck="true"># 标签页</span>├── 404.md             <span class="token comment" spellcheck="true"># 404崩溃页面</span>└── CANME<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="themes目录"><a href="#themes目录" class="headerlink" title="themes目录"></a>themes目录</h3><blockquote><p>hexo-theme-matery主题为例，**<code>_config.yml</code>是主题配置文件，非常重要**</p></blockquote><pre class="line-numbers language-yaml"><code class="language-yaml">├── languages          <span class="token comment" spellcheck="true"># 多语言</span><span class="token punctuation">|</span>   ├── default.yml    <span class="token comment" spellcheck="true"># 默认语言</span><span class="token punctuation">|</span>   └── zh<span class="token punctuation">-</span>CN.yml      <span class="token comment" spellcheck="true"># 中文语言</span>├── layout             <span class="token comment" spellcheck="true"># 布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span><span class="token punctuation">|</span>   ├── _partial       <span class="token comment" spellcheck="true"># 局部的布局，此目录下的*.ejs是对头尾等局部的控制</span><span class="token punctuation">|</span>   └── _widget        <span class="token comment" spellcheck="true"># 小挂件的布局，页面下方小挂件的控制</span>├── source             <span class="token comment" spellcheck="true"># 源码</span><span class="token punctuation">|</span>   ├── css            <span class="token comment" spellcheck="true"># css源码 </span><span class="token punctuation">|</span>   <span class="token punctuation">|</span>   ├── _base      <span class="token comment" spellcheck="true"># *.styl基础css</span><span class="token punctuation">|</span>   <span class="token punctuation">|</span>   ├── _partial   <span class="token comment" spellcheck="true"># *.styl局部css</span><span class="token punctuation">|</span>   <span class="token punctuation">|</span>   ├── fonts      <span class="token comment" spellcheck="true"># 字体</span><span class="token punctuation">|</span>   <span class="token punctuation">|</span>   ├── images     <span class="token comment" spellcheck="true"># 图片</span><span class="token punctuation">|</span>   <span class="token punctuation">|</span>   └── style.styl <span class="token comment" spellcheck="true"># *.styl引入需要的css源码</span><span class="token punctuation">|</span>   ├── fancybox       <span class="token comment" spellcheck="true"># fancybox效果源码</span><span class="token punctuation">|</span>   └── js             <span class="token comment" spellcheck="true"># javascript源代码</span>├── _config.yml        <span class="token comment" spellcheck="true"># 主题配置文件</span>└── README.md          <span class="token comment" spellcheck="true"># 用GitHub的都知道</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="layout目录"><a href="#layout目录" class="headerlink" title="layout目录"></a>layout目录</h4><p>目录部分</p><ul><li><code>_partial</code>主要修改文件</li></ul><pre class="line-numbers language-yaml"><code class="language-yaml">bg<span class="token punctuation">-</span>cover<span class="token punctuation">-</span>content.ejs       <span class="token comment" spellcheck="true"># 主页背景图相关，banner图切换，打字机效果加字等</span>footer.ejs                  <span class="token comment" spellcheck="true"># 页脚配置</span>social<span class="token punctuation">-</span>link.ejs            <span class="token comment" spellcheck="true"># 修改社交链接，微信，qq，微博等</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>文件</p><pre class="line-numbers language-yaml"><code class="language-yaml">404.ejs                 <span class="token comment" spellcheck="true"># 404页面</span>about.ejs               <span class="token comment" spellcheck="true"># 关于我页面，个人简历</span>archive.ejscategories.ejscategory.ejscontact.ejsdouban.ejs                <span class="token comment" spellcheck="true"># 豆瓣插件</span>friends.ejsgalleries.ejs            <span class="token comment" spellcheck="true"># 自定义相册</span>gallery.ejs                <span class="token comment" spellcheck="true"># 自定义相册</span>index.ejslayout.ejs                <span class="token comment" spellcheck="true"># 比较重要，我的天气，动态标签，鼠标点击特效等都在这开启</span>post.ejstag.ejstags.ejs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>重点是这个<strong>layout.ejs</strong>，几乎所有自定义特效都在这个文件开启</p></blockquote><h4 id="source目录-1"><a href="#source目录-1" class="headerlink" title="source目录"></a>source目录</h4><p>存放主题源码</p><pre class="line-numbers language-yaml"><code class="language-yaml">├── css            <span class="token comment" spellcheck="true">#css源码 </span><span class="token punctuation">|</span>   ├── gallery.css      <span class="token comment" spellcheck="true"># 相册css</span><span class="token punctuation">|</span>   ├── gitment.css   <span class="token punctuation">|</span>   ├── matery.css          <span class="token comment" spellcheck="true"># 主页的css相关调整，字体调整，主题色修改</span><span class="token punctuation">|</span>   ├── my<span class="token punctuation">-</span>gitalk.css      <span class="token punctuation">|</span>   └── my.css           <span class="token comment" spellcheck="true"># hexo-filter-github-emojis</span>├── js                       <span class="token comment" spellcheck="true"># javascript源代码，自定义js</span><span class="token punctuation">|</span>   ├── click.js          <span class="token comment" spellcheck="true"># 鼠标点击特效</span><span class="token punctuation">|</span>   ├── crypto<span class="token punctuation">-</span>js.js      <span class="token comment" spellcheck="true"># 加密相关</span><span class="token punctuation">|</span>   ├── cursor.js         <span class="token comment" spellcheck="true"># 雪花背景特效</span><span class="token punctuation">|</span>   ├── fireworks.js    <span class="token comment" spellcheck="true"># 鼠标点击烟花特效</span><span class="token punctuation">|</span>   └── gallery<span class="token punctuation">-</span>encrypt.js          <span class="token comment" spellcheck="true"># 相册加密</span>├── libs         <span class="token comment" spellcheck="true"># 库文件，fancybox效果等插件需在这里打开</span>├── medias       <span class="token comment" spellcheck="true"># 主题内用到的背景图，图标，打赏图等都在这里</span>└── favicon.png            <span class="token comment" spellcheck="true"># 网页标签图</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>js</strong>目录比较重要，所有自定特效，鼠标点击特效，背景特效在这里定义</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客美化-基本配置</title>
      <link href="/2022/03/06/hexo-bo-ke-mei-hua/"/>
      <url>/2022/03/06/hexo-bo-ke-mei-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="主题下载与安装"><a href="#主题下载与安装" class="headerlink" title="主题下载与安装"></a>主题下载与安装</h2><blockquote><p>说明：在之后提到的站点目录即根文件夹，主题目录就是主题文件夹，同理，站点配置文件就是根文件夹的配置文件，如我的：<code>E:\blog\_config.yml</code>，主题配置文件：<code> E:\blog\themes\matery\_config.yml</code></p></blockquote><ol><li>在你的目录文件夹下使用 git clone 命令来下载：直接在站点根目录下执行下面的命令，即可进行主题的下载，主题有两个版本，稳定版本和最新版本(不定期更新优化)，自主选择版本，本文使用的是稳定版。</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml">git clone https<span class="token punctuation">:</span>//gitee.com/yafine66/hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery themes/matery     <span class="token comment" spellcheck="true"># 稳定版</span>git clone <span class="token punctuation">-</span>b develop https<span class="token punctuation">:</span>//gitee.com/yafine66/hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery themes/matery   <span class="token comment" spellcheck="true">#最新版(不定期进行优化更新)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="2"><li><p>切换主题：</p><p>将站点配置文件中的<code>theme</code>值修改为你下载主题的文件名，此处为<code>matery</code>，即<code>theme: matery</code>。</p><p>还需要修改的一些配置：</p><ul><li>语言选择：如果为中文用户，则在language:后添加值zh-CN，如果不修改，默认为英语；</li><li>网址修改：url:的值为你的网址名，如<a href="http://xxxx.github.io;/">http://xxxx.github.io；</a></li><li>站点配置文件有个per_page属性，建议修改为6的倍数，这样网站在适应设备时，有较好的显示效果。</li></ul></li></ol><h2 id="1-增加功能"><a href="#1-增加功能" class="headerlink" title="1.增加功能"></a>1.增加功能</h2><h3 id="1-1-增加页面"><a href="#1-1-增加页面" class="headerlink" title="1.1 增加页面"></a>1.1 增加页面</h3><blockquote><p>增加页面的步骤都基本相同，创建<code>tags</code>标签页、<code>categories</code>分类页，<code>about</code>关于我页、<code> contact</code>留言板页、<code>friends</code>友情链接页、均可以使用这个步骤</p></blockquote><ol><li>如果在你的博客 source 目录下还没有，就输入以下命令（站点目录打开的命令行）来新建一个：</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml">hexo new page "页面的英文"     <span class="token comment" spellcheck="true"># 如：hexo new page "tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容：</li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-06-19 16:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"页面的英文"</span>    <span class="token comment" spellcheck="true"># 如：type: "tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"页面的英文"</span> <span class="token comment" spellcheck="true"># 如：layout: "tags"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>关于<code> contact</code>留言板页：<br>留言板功能依赖于第三方评论系统，激活评论系统才有效果，下面会有介绍</p><p>关于<code>friends</code>友情链接页：<br>如果你想增加内容，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，输入以下内容：</p></blockquote><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token key atrule">"avatar"</span><span class="token punctuation">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token key atrule">"introduction"</span><span class="token punctuation">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token key atrule">"url"</span><span class="token punctuation">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token key atrule">"title"</span><span class="token punctuation">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token key atrule">"avatar"</span><span class="token punctuation">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token key atrule">"introduction"</span><span class="token punctuation">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token key atrule">"url"</span><span class="token punctuation">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token key atrule">"title"</span><span class="token punctuation">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token key atrule">"avatar"</span><span class="token punctuation">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token key atrule">"name"</span><span class="token punctuation">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token key atrule">"introduction"</span><span class="token punctuation">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token key atrule">"url"</span><span class="token punctuation">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token key atrule">"title"</span><span class="token punctuation">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-菜单导航配置"><a href="#1-2-菜单导航配置" class="headerlink" title="1.2 菜单导航配置"></a>1.2 菜单导航配置</h3><blockquote><p>关于导航的配置都在主题配置文件中</p></blockquote><h4 id="1-2-1-配置基本菜单导航的名称、路径url和图标icon"><a href="#1-2-1-配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="1.2.1 配置基本菜单导航的名称、路径url和图标icon"></a>1.2.1 配置基本菜单导航的名称、路径url和图标icon</h4><ul><li>导航名称可以设置成中文/英文</li><li>图标icon可以更换，具体属性值可以在<a href="https://fontawesome.com/icons">fontawesome</a>中查找</li></ul><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">友人帐</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#可以使用中文，也可以在对应的md中设置title:友人帐</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-2-二级菜单配置方法"><a href="#1-2-2-二级菜单配置方法" class="headerlink" title="1.2.2 二级菜单配置方法"></a>1.2.2 二级菜单配置方法</h4><ol><li><p>在需要添加二级菜单的一级菜单下添加children关键字(如:爱好菜单下添加children)，一级菜单不需要增加url属性</p></li><li><p>创建二级页面，步骤与创建页面步骤相同，编辑md时不需要<code>layout</code>属性</p></li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 追番<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-06-15 15:19:35</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"bangumis"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><p>给二级菜单增加名称name,路径url和图标icon</p></li><li><p>注意每个二级菜单模块前要加<code> -</code></p></li><li><p>二级菜单要缩进到一级菜单内</p></li></ol><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">爱好</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bicycle    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 追番        <span class="token key atrule">url</span><span class="token punctuation">:</span> /bangumis        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>play<span class="token punctuation">-</span>circle      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 音乐        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-增加番剧、音乐页面"><a href="#1-3-增加番剧、音乐页面" class="headerlink" title="1.3 增加番剧、音乐页面"></a>1.3 增加番剧、音乐页面</h3><blockquote><p>此处可以设置一个二级导航爱好，将这些归纳到一个导航中效果更佳</p></blockquote><h4 id="1-3-1-Bilibili"><a href="#1-3-1-Bilibili" class="headerlink" title="1.3.1 Bilibili"></a>1.3.1 Bilibili</h4><blockquote><p>需要插件来获取你的番剧</p></blockquote><ol><li><p>安装插件</p><pre class="line-numbers language-yaml"><code class="language-yaml">npm install hexo<span class="token punctuation">-</span>bilibili<span class="token punctuation">-</span>bangumi <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装番剧更新插件</p><pre class="line-numbers language-yaml"><code class="language-yaml">npm install hexo<span class="token punctuation">-</span>bilibili<span class="token punctuation">-</span>bangumi <span class="token punctuation">-</span><span class="token punctuation">-</span>update <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置</p><p>将下面的配置写入站点配置文件<code>_config.yml</code>里（非主题）</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">bangumi</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#是否开启</span>  <span class="token key atrule">vmid</span><span class="token punctuation">:</span> <span class="token number">1234567 </span><span class="token comment" spellcheck="true">#输入你番剧的uid，登录网址https://space.bilibili.com/1234567，后面数字就是你的uid</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'追番列表'</span> <span class="token comment" spellcheck="true"># 标题</span>  <span class="token key atrule">quote</span><span class="token punctuation">:</span> <span class="token string">'生命不息，追番不止！'</span> <span class="token comment" spellcheck="true"># 简介</span>  <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token number">1 </span><span class="token comment" spellcheck="true"># 初始显示页面：0: 想看 , 1: 在看 , 2: 看过，默认为 1</span>  <span class="token key atrule">loading</span><span class="token punctuation">:</span> <span class="token string">'/img/bangumi-loading.gif'</span> <span class="token comment" spellcheck="true"># 图片加载完成前的 loading 图片</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建番剧页面</p><p>输入命令</p><pre class="line-numbers language-yaml"><code class="language-yaml">hexo new page bangumis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到<code>source/bangumis/index.md</code>这个文件，修改这个文件，添加 <code>type: "bangumis"</code></p><h2 id="yaml"><a href="#yaml" class="headerlink" title="```yaml"></a>```yaml</h2><p>title: bangumis<br>date: 2020-06-18 00:00:00</p><h2 id="type-“bangumis”"><a href="#type-“bangumis”" class="headerlink" title="type: “bangumis”"></a>type: “bangumis”</h2></li><li><p>配置番剧页面为二级导航栏</p><p>参考上边的二级导航栏配置方式</p></li><li><p>使用</p><p>输入命令，更新番剧数据</p><pre class="line-numbers language-yaml"><code class="language-yaml"> hexo clean &amp;&amp; hexo g &amp;&amp; hexo bangumi <span class="token punctuation">-</span>u &amp;&amp; hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><blockquote><p>更新时遇到的坑：</p><p>错误：配置都完全正确，却出现Get bangumi data error</p><p>原因：你的B站设置了番剧仅自己可见</p><p>解决方法：进入B站个人空间，点击设置，将追番追剧设置为公开</p></blockquote><p>   如果想要删除数据，可以输入该命令</p><pre class="line-numbers language-yaml"><code class="language-yaml">   hexo bangumi <span class="token punctuation">-</span>d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意：该插件不需要我们每次部署都要输入更新数据的命令，只有你自己番剧更新时才需要执行更新指令，之前的番剧数据会一直保留，直到被你删除</p></blockquote><h4 id="1-3-2-网易云音乐"><a href="#1-3-2-网易云音乐" class="headerlink" title="1.3.2 网易云音乐"></a>1.3.2 网易云音乐</h4><blockquote><p>这个就非常简单了，不需要安装任何插件，只需要创建新页面，配置二级导航即可</p></blockquote><ol><li><p>创建音乐页面</p></li><li><p>输入命令</p><pre class="line-numbers language-yaml"><code class="language-yaml">hexo new page musics<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>找到<code>source/musics/index.md</code>这个文件，修改这个文件，添加 <code>type: "music"</code>   </p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 音乐！音乐！<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-06-16 14:45:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">'music'</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p> 在index.md文件中增加以下内容</p></li></ol><pre class="line-numbers language-yaml"><code class="language-yaml">  &lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=530 height=520 src="//music.163.com/outchain/player<span class="token punctuation">?</span>type=0<span class="token important">&amp;id</span>=2817562565<span class="token important">&amp;auto</span>=1<span class="token important">&amp;height</span>=430"<span class="token punctuation">></span>&lt;/iframe<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p> 第二行的id的那串数字，需要改成你想要的歌单id</p><p>查看自己id的方式：</p><ol><li>点击网易云音乐软件，找到想设置的歌单→分享→复制链接</li><li><a href="https://music.163.com/playlist?id=531558923&amp;userid=375531677">https://music.163.com/playlist?id=531558923&amp;userid=375531677</a></li><li>id则是你想要的id，<strong>不是</strong>后面的userid</li></ol></blockquote><ol start="5"><li><p>配置音乐页面为二级导航栏</p><p>参考上边的二级导航栏配置方式</p></li></ol><h3 id="1-4-增加自定义相册"><a href="#1-4-增加自定义相册" class="headerlink" title="1.4 增加自定义相册"></a>1.4 增加自定义相册</h3><blockquote><p>修改的原因：</p><p>matery主题原有的相册效果不佳，原因在于全部采用平铺式，没有分类的功能，自定义相册可以建立文件夹，方便分类</p><p>注意：本教程采用图床+CDN，图床采用的是github+Picgo</p><p>关于图床和cdn是什么：</p><p>通俗来说就是将本地图片上传到网上，通过cdn加速来加快读取图片的一种方式</p><p>具体看<a href="https://yafine-blog.cn/posts/eb3a.html">励心大佬关于github图床搭建的教程</a></p></blockquote><ol><li><p>新建相册页面</p><p>执行以下命令：</p><pre class="line-numbers language-yaml"><code class="language-yaml">   hexo new page galleries<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml"><code class="language-yaml">到站点根目录的source目录下找名称为 *<span class="token important">*galleries</span>** 的目录，打开目录下的 *<span class="token important">*index</span>.md** 文档，添加以下配置：<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><pre class="line-numbers language-yaml"><code class="language-yaml">   <span class="token key atrule">title</span><span class="token punctuation">:</span> 相册   <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-06-13 10:59:30</span>   <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"galleries"</span>   <span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"galleries"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>配置导航菜单</p><p>在主题配置文件中menu加上</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">相册</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries     <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>创建ejs文件和css文件</p><p>在路径 <strong>matery/source/css</strong>目录下，新建<code>gallery.css</code>，增加以下代码</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.gallery-wrapper</span></span><span class="token punctuation">{</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-wrapper</span> <span class="token class">.gallery-box</span></span><span class="token punctuation">{</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-wrapper</span> <span class="token class">.gallery-item</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-cover-box</span></span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">60%</span><span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> center center no-repeat<span class="token punctuation">;</span>  <span class="token property">-webkit-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-cover-box</span> <span class="token class">.gallery-cover-img</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>,-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.gallery-item</span> <span class="token class">.gallery-name</span></span><span class="token punctuation">{</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#666</span><span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.waterfall</span> </span><span class="token punctuation">{</span>  <span class="token property">column-count</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token property">column-gap</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.photo-wrapper</span></span><span class="token punctuation">{</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.photo-item</span> </span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">-moz-page-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">-webkit-column-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">1</span>px <span class="token number">3</span>px <span class="token number">0</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.22</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.photo-item</span> img </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.photo-item</span> <span class="token class">.photo-name</span></span><span class="token punctuation">{</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#dddddd</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*适配移动端布局*/</span><span class="token atrule"><span class="token rule">@media</span> only screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 601px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>  <span class="token selector"><span class="token class">.waterfall</span> </span><span class="token punctuation">{</span>    <span class="token property">column-count</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token property">column-gap</span><span class="token punctuation">:</span> <span class="token number">1</span>em<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<strong>matery/layout</strong> 目录下创建 <strong>galleries.ejs</strong> ，增加以下代码，并修改代码</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/css/gallery.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&lt;%- partial('_partial/bg-cover') %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(site.data</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">site.data.galleries)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>        &lt;% var galleries = site.data.galleries; %>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gallery-wrapper row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            &lt;% for (var i = 0, len = galleries.length; i &lt; len; i++) { %>            &lt;% var gallery = galleries[i]; %>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>col s6 m4 l4 xl3 gallery-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./&lt;%- gallery.name %<span class="token punctuation">></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gallery-item<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gallery-cover-box<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(你的链接&lt;%- gallery.cover%>)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gallery-name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%-</span> <span class="token attr-name">gallery.name</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>修改代码：</p><p>在<strong>你的链接</strong>这填写你相册图床的<strong>根网址</strong>，解释一下什么叫根网址，</p><p>一张图片的目录是<a href="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/123/aaa.jpg">https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/123/aaa.jpg</a></p><p>那么它的根目录就是<a href="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/%EF%BC%8C123/%E5%8F%AA%E6%98%AF%E5%9B%BE%E5%BA%8A%E4%B8%AD%E7%9A%84%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9">https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/，123/只是图床中的一个文件夹</a></p><p>比如我的修改为：url(<a href="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/">https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/</a>&lt;%- gallery.cover%&gt;);”&gt;</p></blockquote><p>仍然在此目录新建<code>gallery.ejs</code>文件，添加以下代码，并修改代码：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"/css/gallery.css"</span><span class="token operator">></span><span class="token operator">&lt;</span>link type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"/libs/fancybox/jquery.fancybox.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span><span class="token operator">&lt;</span>link type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"/libs/justifiedGallery/justifiedGallery.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token keyword">let</span> galleries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>site<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">)</span> <span class="token punctuation">{</span>    galleries <span class="token operator">=</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> pageTitle <span class="token operator">=</span> page<span class="token punctuation">.</span>title<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span>galleries<span class="token punctuation">,</span> pageTitle<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> galleries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">==</span> pageTitle<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> currentGallery <span class="token operator">=</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span>galleries<span class="token punctuation">,</span> pageTitle<span class="token punctuation">)</span><span class="token keyword">var</span> photos <span class="token operator">=</span> currentGallery<span class="token punctuation">.</span>photos<span class="token punctuation">;</span><span class="token keyword">let</span> imageStr <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> photos<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> photo <span class="token operator">=</span> photos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>     imageStr <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">"&lt;a href=\"你的链接"</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\""</span> <span class="token operator">+</span>            <span class="token string">"     class=\"photo-item\" rel=\"example_group\""</span> <span class="token operator">+</span>            <span class="token string">"     data-fancybox=\"images\">"</span> <span class="token operator">+</span>            <span class="token string">"      &lt;img src=\"你的链接"</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\""</span> <span class="token operator">+</span>            <span class="token string">"       alt="</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">">\n"</span> <span class="token operator">+</span>            <span class="token string">"    &lt;/a>"</span><span class="token punctuation">}</span><span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"photo-wrapper"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>password <span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/crypto-js.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>            <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/gallery-encrypt.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>            <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"hbe-security"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hbe-input-container"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"hbe-form-control"</span> id<span class="token operator">=</span><span class="token string">"pass"</span>  placeholder<span class="token operator">=</span><span class="token string">"请输入密码查看内容"</span><span class="token operator">/</span><span class="token operator">></span>                    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:;"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn-decrypt"</span> id<span class="token operator">=</span><span class="token string">"btn_decrypt"</span><span class="token operator">></span>解密<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span>div  id<span class="token operator">=</span><span class="token string">"mygallery"</span><span class="token operator">></span>                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waterfall"</span> id<span class="token operator">=</span><span class="token string">"encrypt-blog"</span> style<span class="token operator">=</span><span class="token string">"display:none"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">aes</span><span class="token punctuation">(</span>imageStr<span class="token punctuation">,</span> page<span class="token punctuation">.</span>password<span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"waterfall"</span> id<span class="token operator">=</span><span class="token string">"encrypt-blog"</span><span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> imageStr <span class="token operator">%</span><span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/libs/fancybox/fancybox.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/libs/justifiedGallery/justifiedGallery.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"a[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#encrypt-blog"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">justifiedGallery</span><span class="token punctuation">(</span><span class="token punctuation">{</span>margins<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> rowHeight<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>修改代码：</p><p>在<strong>你的链接</strong>这填写你相册图床的<strong>根网址</strong></p><p>注意：最后一定要带上 /</p></blockquote></li><li><p>添加相册json配置文件</p><p>在根目录<code>source\_data</code>新建 <strong>galleries.json</strong> 的文件，增加<strong>json</strong> 代码如下：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"相册名字"</span><span class="token punctuation">,</span>    <span class="token string">"cover"</span><span class="token punctuation">:</span> <span class="token string">"images/p0.png"</span><span class="token punctuation">,</span>      <span class="token string">"description"</span><span class="token punctuation">:</span> <span class="token string">"相册的描述"</span><span class="token punctuation">,</span>      <span class="token string">"photos"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token string">"images/node-1.png"</span><span class="token punctuation">,</span>        <span class="token string">"images/node-2.png"</span><span class="token punctuation">,</span>        <span class="token string">"images/node-3.png"</span><span class="token punctuation">,</span>        <span class="token string">"images/node-4.png"</span><span class="token punctuation">,</span>        <span class="token string">"images/node-5.png"</span><span class="token punctuation">,</span>        <span class="token string">"images/node-6.png"</span><span class="token punctuation">,</span>        <span class="token string">"images/node-7.png"</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>属性介绍：</p><p>cover：相册的封面，值为图片的地址</p><p>photos：图片的地址，输入了地址界面才会显示该图片，前提是图床中有该图片</p></blockquote></li><li><p>新建相册</p><p>在galleries目录下建立对应的相册名称目录和文件，比如我这个相册需要新建名称为 2020 文件夹，然后在文件夹中新建index.md文件，文件内容为：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">2020</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-02-19 10:51:50</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"gallery"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"gallery"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>查看效果</p><p>重新部署</p><pre class="line-numbers language-yaml"><code class="language-yaml">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="1-5-增加emoji支持"><a href="#1-5-增加emoji支持" class="headerlink" title="1.5 增加emoji支持"></a>1.5 增加emoji支持</h3><p>😄</p><p>使你markdown博客里的emoji表情跳动起来</p><ol><li><p>安装插件</p><pre class="line-numbers language-yaml"><code class="language-yaml">npm install hexo<span class="token punctuation">-</span>filter<span class="token punctuation">-</span>github<span class="token punctuation">-</span>emojis <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  <span class="token key atrule">customEmojis</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新部署即可查看</p></li></ol><blockquote><p>小坑：在配置支持前发布的文章中的表情并没有获得支持，并且连表情都不会显示，所以最好在配置之后再输入表情进行测试</p></blockquote><h3 id="1-6代码高亮"><a href="#1-6代码高亮" class="headerlink" title="1.6代码高亮"></a>1.6代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，用一个插件来替换它</p><ol><li><p>安装插件</p><pre class="line-numbers language-yaml"><code class="language-yaml">npm i <span class="token punctuation">-</span>S hexo<span class="token punctuation">-</span>prism<span class="token punctuation">-</span>plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改 Hexo 站点配置文件 _config.yml 中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  <span class="token key atrule">custom_css</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="1-7-搜索功能"><a href="#1-7-搜索功能" class="headerlink" title="1.7 搜索功能"></a>1.7 搜索功能</h3><p>实现文章内容搜索</p><ol><li><p>安装插件</p><pre class="line-numbers language-yaml"><code class="language-yaml">npm install hexo<span class="token punctuation">-</span>generator<span class="token punctuation">-</span>search <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在 Hexo 站点配置文件 _config.yml 中，新增以下的配置项：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="1-8-中文链接转拼音"><a href="#1-8-中文链接转拼音" class="headerlink" title="1.8 中文链接转拼音"></a>1.8 中文链接转拼音</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的文章链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 hexo-permalink-pinyin Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><ol><li><p>安装插件</p><pre class="line-numbers language-yaml"><code class="language-yaml">npm i hexo<span class="token punctuation">-</span>permalink<span class="token punctuation">-</span>pinyin <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在 Hexo 站点配置文件 _config.yml 中，新增以下的配置项：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="1-9-文章字数统计插件"><a href="#1-9-文章字数统计插件" class="headerlink" title="1.9 文章字数统计插件"></a>1.9 文章字数统计插件</h3><p>用于在文章中显示文章字数、阅读时长信息</p><ol><li><p>安装插件</p><pre class="line-numbers language-yaml"><code class="language-yaml">npm i <span class="token punctuation">-</span><span class="token punctuation">-</span>save hexo<span class="token punctuation">-</span>wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在<strong>主题</strong>配置文件_config.yml 文件中，<strong>激活</strong>以下配置项即可：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">wordCount</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 将这个值设置为 true 即可.</span>  <span class="token key atrule">postWordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="1-10-配置音乐播放器"><a href="#1-10-配置音乐播放器" class="headerlink" title="1.10 配置音乐播放器"></a>1.10 配置音乐播放器</h3><p>想支持音乐播放，在<strong>主题</strong>的 _config.yml 配置文件中激活music配置即可：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">autoHide</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># hide automaticaly</span>  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease   <span class="token comment" spellcheck="true">#require    music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment" spellcheck="true">#require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">411680085     </span><span class="token comment" spellcheck="true">#require    song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">true       </span><span class="token comment" spellcheck="true"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false   </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7       </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">false  </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">hideLrc</span><span class="token punctuation">:</span> <span class="token boolean important">true     </span><span class="token comment" spellcheck="true"># 隐藏歌词</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>属性介绍：</p><p>server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）</p><p>type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）</p><p>id获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，playlist的id即为这串数字。</p></blockquote><blockquote><p>小坑：matery主题不支持ajax异步机制，在切换页面时音乐也会切换，不会继续一首歌播放所以这个功能比较鸡肋，在于自己取舍</p></blockquote><h3 id="1-11-关于我页面添加个人简历"><a href="#1-11-关于我页面添加个人简历" class="headerlink" title="1.11 关于我页面添加个人简历"></a>1.11 关于我页面添加个人简历</h3><p>打开theme/matery/layout/about.ejs文件，大约在13行。有一个<code>card</code>标签，找出其对应结尾的标签，大约在61行左右，然后在下面新增如下代码</p><pre class="line-numbers language-ejs"><code class="language-ejs"><div class="card">     <div class="card-content">         <div class="card-content article-card-content">             <div class="title center-align" data-aos="zoom-in-up">                 <i class="fa fa-address-book"></i>&nbsp;&nbsp;<%- __('个人简历') %>              </div>                 <div id="articleContent" data-aos="fade-up">                     <%- page.content %>                 </div>           </div>      </div></div><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意粘贴的位置和空格要正确，这里的位置随你自己设置，你也可以把简历作为第一个card，然后/source/about/index.md下面写上你的简历了（就像写博客一样）。</p><h3 id="1-12-配置404错误页面"><a href="#1-12-配置404错误页面" class="headerlink" title="1.12 配置404错误页面"></a>1.12 配置404错误页面</h3><p>站点根目录下的source文件夹下新建404.md文件，里面内容如下：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-6-18 16:41:10</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面了"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在主题文件夹的layout目录下新建404.ejs文件，添加内容如下：</p><pre class="line-numbers language-ejs"><code class="language-ejs"><style type="text/css">    /* don't remove. */    .about-cover {        height: 90.2vh;    }</style><div class="bg-cover pd-header about-cover">    <div class="container">        <div class="row">            <div class="col s10 offset-s1 m8 offset-m2 l8 offset-l2">                <div class="brand">                    <div class="title center-align">                        404                    </div>                    <div class="description center-align">                        <%= page.description %>                    </div>                </div>            </div>        </div>    </div></div><script>    // 每天切换 banner 图.  Switch banner image every day.    $('.bg-cover').css('background-image', 'url(https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.1/source/medias/banner/' + new Date().getDay() + '.jpg)');</script><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后部署，再看看效果即可<a href="http://localhost:4000/404/">http://localhost:4000/404/</a></p><h3 id="1-13-添加Valine评论系统"><a href="#1-13-添加Valine评论系统" class="headerlink" title="1.13 添加Valine评论系统"></a>1.13 添加Valine评论系统</h3><p>编辑主题目录下的配置文件<code>MyBlog/themes/matery/_config.yml</code>，找到如下内容并修改</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.</span><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span> Ucrxxxxxxxxxxxxxxxx<span class="token punctuation">-</span>xxxxsz  <span class="token comment" spellcheck="true"># 自行注册valine获取</span>  <span class="token key atrule">appKey</span><span class="token punctuation">:</span> zPsLxxxxxxxxxxxxxxerLmd    <span class="token comment" spellcheck="true"># 自行注册valine获取</span>  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'monsterid'</span> <span class="token comment" spellcheck="true"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'留下你的足迹..'</span> <span class="token comment" spellcheck="true"># Comment Box placeholder</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> /medias/comment_bg.png  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">enableQQ</span><span class="token punctuation">:</span> <span class="token number">16463223  </span><span class="token comment" spellcheck="true"># 改为自己的QQ号</span>  <span class="token key atrule">recordIP</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">requiredFields</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> nick    <span class="token punctuation">-</span> mail  <span class="token key atrule">guest_info</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> nick    <span class="token punctuation">-</span> mail    <span class="token punctuation">-</span> link  <span class="token key atrule">master</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> 46606772953bed0812789d6dc955614e  <span class="token comment" spellcheck="true"># md5加密后的博主邮箱</span>  <span class="token key atrule">metaPlaceholder</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 输入框的背景文字</span>    <span class="token key atrule">nick</span><span class="token punctuation">:</span> 昵称/QQ号(必填)    <span class="token key atrule">mail</span><span class="token punctuation">:</span> 邮箱(必填)    <span class="token key atrule">link</span><span class="token punctuation">:</span> 网址(https<span class="token punctuation">:</span>//)  <span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN  <span class="token key atrule">tagMeta</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># The String Array of Words to show Flag.[Just Only xCss Style mode]</span>    <span class="token punctuation">-</span> 博主    <span class="token punctuation">-</span> 小伙伴    <span class="token punctuation">-</span> 访客  <span class="token key atrule">friends</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># The MD5 String Array of friends Email to show friends Flag.[Just Only xCss Style mode]</span>    <span class="token punctuation">-</span> cb3e577ff029d6073400d5557effd41f       <span class="token punctuation">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-14-修改公告-dream一栏-里的每日一句"><a href="#1-14-修改公告-dream一栏-里的每日一句" class="headerlink" title="1.14 修改公告(dream一栏)里的每日一句"></a>1.14 修改公告(dream一栏)里的每日一句</h3><p>找到<code>/themes/matery/layout/index.ejs</code>，第17行改为：</p><pre class="line-numbers language-yaml"><code class="language-yaml">&lt;% if (theme.dream.enable) <span class="token punctuation">{</span> %<span class="token punctuation">></span>  &lt;<span class="token tag">!--</span> &lt;%<span class="token punctuation">-</span> partial('_widget/dream') %<span class="token punctuation">></span> <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span><span class="token scalar string">  &lt;i class="fa fa-volume-up fa-lg fa-fw text-color">&lt;/i> &lt;%- '&lt;span id="hitokoto">一言API请求超时。请稍后重试。&lt;/span> （来源：一言API）' %></span>&lt;% <span class="token punctuation">}</span> %<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>同时在<code>/themes/matery/layout/_partial/head.ejs</code>增加代码：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://v1.hitokoto.cn/?c=d&amp;encode=js&amp;select=%23hitokoto"</span> defer<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-15-修改打赏二维码"><a href="#1-15-修改打赏二维码" class="headerlink" title="1.15 修改打赏二维码"></a>1.15 修改打赏二维码</h3><p>在主题文件的 source/medias/reward 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h2 id="2-博客优化"><a href="#2-博客优化" class="headerlink" title="2. 博客优化"></a>2. 博客优化</h2><h3 id="2-1-gulp代码压缩"><a href="#2-1-gulp代码压缩" class="headerlink" title="2.1 gulp代码压缩"></a>2.1 gulp代码压缩</h3><blockquote><p>hexo生成的html、css、js等都有很多的空格或者换行，而空格和换行也是占用字节的，所以需要将空格换行去掉也就是我要进行的“压缩”，减小一点资源文件的大小也是对访问速度有那么一点提升的。</p></blockquote><ol><li><p>在站点目录执行以下命令，安装插件</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 全局安装gulp模块</span>npm install gulp <span class="token punctuation">-</span>g<span class="token comment" spellcheck="true"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span>npm install gulp gulp<span class="token punctuation">-</span>htmlclean gulp<span class="token punctuation">-</span>htmlmin gulp<span class="token punctuation">-</span>minify<span class="token punctuation">-</span>css gulp<span class="token punctuation">-</span>uglify gulp<span class="token punctuation">-</span>imagemin <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span class="token comment" spellcheck="true"># 额外的功能模块</span>npm install gulp<span class="token punctuation">-</span>debug gulp<span class="token punctuation">-</span>clean<span class="token punctuation">-</span>css gulp<span class="token punctuation">-</span>changed gulp<span class="token punctuation">-</span>if gulp<span class="token punctuation">-</span>plumber gulp<span class="token punctuation">-</span>babel babel<span class="token punctuation">-</span>preset<span class="token punctuation">-</span>es2015 del @babel/core <span class="token punctuation">-</span><span class="token punctuation">-</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在Hexo根目录新建文件 gulpfile.js，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。（注意：文件名不能错，一定为gulpfile.js，否则会出错！）</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> debug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cleancss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-clean-css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//css压缩组件</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-uglify"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//js压缩组件</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlmin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html压缩组件</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlclean"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html清理组件</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-imagemin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//图片压缩组件</span><span class="token keyword">var</span> changed <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-changed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//文件更改校验组件</span><span class="token keyword">var</span> gulpif <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-if"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//任务 帮助调用组件</span><span class="token keyword">var</span> plumber <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-plumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//容错组件（发生错误不跳出任务，并报出错误内容）</span><span class="token keyword">var</span> isScriptAll <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span><span class="token keyword">var</span> isDebug <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否调试显示 编译通过的文件</span><span class="token keyword">var</span> gulpBabel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-babel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> es2015Preset <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"babel-preset-es2015"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"del"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> Hexo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"hexo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> hexo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hexo</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 初始化一个hexo对象</span><span class="token comment" spellcheck="true">// 清除public文件夹</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"clean"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"public/**/*"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span><span class="token comment" spellcheck="true">// 创建静态页面 （等同 hexo generate）</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 启动Hexo服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo        <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩public目录下的js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressJs"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.js"</span><span class="token punctuation">,</span> <span class="token string">"!./public/libs/**"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span>排除的js        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress JS:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>            <span class="token function">gulpBabel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>es2015Preset<span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">/</span> es5检查机制            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span><span class="token function">调用压缩组件方法uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>对合并的文件进行压缩        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">/</span>输出到目标目录<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span> 压缩<span class="token keyword">public</span>目录下的css文件gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>        rebase<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token operator">/</span><span class="token operator">/</span>advanced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">true</span> <span class="token punctuation">[</span>是否开启高级优化（合并选择器等）<span class="token punctuation">]</span>        compatibility<span class="token punctuation">:</span> <span class="token string">"ie7"</span> <span class="token operator">/</span><span class="token operator">/</span>保留ie7及以下兼容写法 类型：String 默认：<span class="token string">''</span>or<span class="token string">'*'</span> <span class="token punctuation">[</span>启用兼容模式； <span class="token string">'ie7'</span>：IE7兼容模式，<span class="token string">'ie8'</span>：IE8兼容模式，<span class="token string">'*'</span>：IE9<span class="token operator">+</span>兼容模式<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepBreaks<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">false</span> <span class="token punctuation">[</span>是否保留换行<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepSpecialComments<span class="token punctuation">:</span> <span class="token string">'*'</span> <span class="token operator">/</span><span class="token operator">/</span>保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.css"</span><span class="token punctuation">,</span> <span class="token string">"!./public/**/*.min.css"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//排除的css</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress CSS:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleancss</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩public目录下的html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> cleanOptions <span class="token operator">=</span> <span class="token punctuation">{</span>        protect<span class="token punctuation">:</span> <span class="token regex">/&lt;\!--%fooTemplate\b.*?%-->/g</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//忽略处理</span>        unprotect<span class="token punctuation">:</span> <span class="token operator">/</span><span class="token operator">&lt;</span>script <span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">*</span>\btype<span class="token operator">=</span><span class="token string">"text\/x-handlebars-template"</span><span class="token punctuation">[</span>\s\S<span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">?</span><span class="token operator">&lt;</span>\<span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">/</span>gi <span class="token comment" spellcheck="true">//特殊处理</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> minOption <span class="token operator">=</span> <span class="token punctuation">{</span>        collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩HTML</span>        collapseBooleanAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//省略布尔属性的值 &lt;input checked="true"/> ==> &lt;input /></span>        removeEmptyAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除所有空格作属性值 &lt;input id="" /> ==> &lt;input /></span>        removeScriptTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;script>的type="text/javascript"</span>        removeStyleLinkTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;style>和&lt;link>的type="text/css"</span>        removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//清除HTML注释</span>        minifyJS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面JS</span>        minifyCSS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面CSS</span>        minifyURLs<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//替换页面URL</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/**/*.html"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress HTML:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span>cleanOptions<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span>minOption<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩 public/medias 目录内图片</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressImage"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>        optimizationLevel<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>        progressive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 无损压缩jpg图片</span>        interlaced<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>        multipass<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/medias/**/*.*"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public/medias"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress Images:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"build"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        <span class="token string">"compressHtml"</span><span class="token punctuation">,</span>        <span class="token string">"compressCss"</span><span class="token punctuation">,</span>        <span class="token string">"compressJs"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 默认任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>    <span class="token string">"default"</span><span class="token punctuation">,</span>    gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>        <span class="token string">"clean"</span><span class="token punctuation">,</span>        <span class="token string">"generate"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token string">"compressJs"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：这里我去掉了图片的压缩，如果想要加上可以在第154行加上 “compressImage”, 和第165行的加上”compressImage” 即可</p></blockquote></li><li><p>使用（两种方式）：</p><ul><li>直接在Hexo根目录执行 gulp，这个命令相当于 hexo cl&amp;&amp;hexo g 并且再把代码压缩，再hexo s进行部署即可</li><li>在Hexo根目录执行 gulp build ，这个命令与第1种相比是：在最后又加了个 hexo d ，等于说生成、压缩文件后又帮你自动部署了</li></ul></li></ol><h3 id="2-2-CDN加速"><a href="#2-2-CDN加速" class="headerlink" title="2.2 CDN加速"></a>2.2 CDN加速</h3><blockquote><p>关于CDN是什么？参考<a href="https://yafine-blog.cn/posts/ee35.html">励心大佬</a></p><p>由于我们将博客部署到了国外的Github上，国内访问速度很慢，我们可以使用这个技术来实现全站加速</p></blockquote><p>在理解了CDN的含义和该如何使用CDN的前提下，matery主题有一个很人性化的操作，不需要我们将每个资源都逐个设置，在主题配置文件_config.yml中搜索<code>jsDelivr</code>，填写url为自己的博客仓库即可，如我的：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">jsDelivr</span><span class="token punctuation">:</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/fenghen0918/fenghen0918.github.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>此时重新<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>部署你的项目体验效果，网站的加载速度会快很多（先看小苏经历的坑）。</p><blockquote><p>关于CDN加速的坑：</p><ol><li>配置了此项，就代表着hexo s本地调试的时候，网站依然会去GitHub请求资源（原来的资源），所以本地调试的时候记得将 此项配置 注释或者删除掉；</li><li>在hexo s本地调试好之后，需要hexo d部署到网上，要先配置到<code>url</code>，之后再<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code>进行部署，否则不生效；</li><li>使用了matery提供的全局CDN加速，有可能你的樱花散落，鼠标图标等一些特效消失，具体原因还不清楚，不过加速效果才是小苏想要的，就舍弃掉了这些特效。</li></ol></blockquote><h3 id="2-3-打造图床"><a href="#2-3-打造图床" class="headerlink" title="2.3 打造图床"></a>2.3 打造图床</h3><blockquote><p>图床的选择有免费和收费，在这里推荐一种免费搭建图床的方式：</p><p>PicGo+Github：<a href="https://yafine-blog.cn/posts/eb3a.html">https://yafine-blog.cn/posts/eb3a.html</a></p><p>有了图床，我们可以实现自定义相册、markdown基于图床上传图片的功能，很强大</p></blockquote><h3 id="2-4-部署到Coding"><a href="#2-4-部署到Coding" class="headerlink" title="2.4 部署到Coding"></a>2.4 部署到Coding</h3><blockquote><p>在上面的教程我们可以将博客部署到国外Github的仓库上，我们也可以将博客部署到国内Coding、Gitee仓库上，可以提高一些网站访问的速度，小苏只使用了Coding，这里也介绍一下。</p></blockquote><ul><li><a href="https://fenghen0918.github.io/2020/06/20/hexo-bo-ke-bu-shu-dao-coding/">https://fenghen0918.github.io/2020/06/20/hexo-bo-ke-bu-shu-dao-coding/</a></li></ul><h3 id="2-5-新建文章自动打开本地Markdown编辑器"><a href="#2-5-新建文章自动打开本地Markdown编辑器" class="headerlink" title="2.5 新建文章自动打开本地Markdown编辑器"></a>2.5 新建文章自动打开本地Markdown编辑器</h3><blockquote><p>写新文章时，需要控制台执行hexo new “文章名字”生成一篇新文章，但需要手动打开，挺麻烦，我们可以设置在生成之后自动打开</p></blockquote><p>在站点根目录下新建scripts目录，然后在新建<code>auto_open.js</code>，在文件填入一下内容：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> spawn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Hexo 2.x 用户复制这段</span><span class="token comment" spellcheck="true">//hexo.on('new', function(path){</span>  <span class="token comment" spellcheck="true">//spawn('start  "markdown编辑器绝对路径.exe" ' + path);</span><span class="token comment" spellcheck="true">//});</span><span class="token comment" spellcheck="true">// Hexo 3 用户复制这段</span>hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'start  "D:\Program Files\Typora\Typora.exe" '</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>其中”D:\Program Files\Typora\Typora.exe”是我本地编辑器的路径，只需要改为你本地编辑器的路径即可，然后在执行<code>hexo cl &amp;&amp; hexo g -d</code>，部署到GitHub即可，以后在发布文章就会自动打开编辑器。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客美化</title>
      <link href="/2022/03/06/hexo-bo-ke-mei-hua-3/"/>
      <url>/2022/03/06/hexo-bo-ke-mei-hua-3/</url>
      
        <content type="html"><![CDATA[<h1 id="在-Hexo-博客中创建自定义页面"><a href="#在-Hexo-博客中创建自定义页面" class="headerlink" title="在 Hexo 博客中创建自定义页面"></a>在 Hexo 博客中创建自定义页面</h1><p>使用<code>hexo</code>创建的静态博客，所有博文内容都是有<code>markdown</code>生成，且页面样式也是由下载的主题自动化生成的，那么想要在独立页面中大展身手的前端小伙伴，如何将写好的静态页面引入到<code>hexo</code>博客中呢？<code>html</code>，<code>css</code>，<code>js</code>等文件在<code>hexo</code>项目里如何避免被自动渲染呢？</p><p>打开hexo项目根目录下的配置文件<code>_config.yml</code>，找到<code>skip_render:</code>，在这里就可以配置需要跳过渲染的文件。</p><p>例如，我们把所有静态页面放到<code>source</code>文件夹下的<code>demo</code>文件夹中，只要配置</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> demo/**<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就可以使<code>demo</code>下的所有文件（包括子文件）避免被编译。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> demo/*             <span class="token comment" spellcheck="true"># 屏蔽demo文件夹下的文件，不包括子文件夹内的内容</span><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> demo/**            <span class="token comment" spellcheck="true"># 屏蔽demo文件夹下的所有文件，包括子文件夹内的内容</span><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> demo/index.html    <span class="token comment" spellcheck="true"># 屏蔽demo文件夹下的index.html，特指一个文件</span><span class="token key atrule">skip_render</span><span class="token punctuation">:</span> demo/*.html        <span class="token comment" spellcheck="true"># 屏蔽demo文件夹下的所有html文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>写多个筛选条件时</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> space/**    <span class="token punctuation">-</span> demo/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>随后即可 hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客美化</title>
      <link href="/2022/03/06/hexo-bo-ke-mei-hua-2/"/>
      <url>/2022/03/06/hexo-bo-ke-mei-hua-2/</url>
      
        <content type="html"><![CDATA[<p><strong>首先声明一下，一定要分清什么是站点配置文件，什么是主题文件，比如我在 F 盘新建我的博客文件夹，名称为 blog，那么站点配置文件的路径为 F:/blog/_config.yml，而你的主题配置文件路径为 F:/blog/themes/matery/_config.yml。</strong></p><h4 id="1-修改主题的基本信息"><a href="#1-修改主题的基本信息" class="headerlink" title="1. 修改主题的基本信息"></a>1. 修改主题的基本信息</h4><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true">#这是根目录下的配置文件信息</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 过客~励む   <span class="token comment" spellcheck="true">#这是网站标题</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span> 励む    <span class="token comment" spellcheck="true">#这是网站副标题subtitle</span><span class="token comment" spellcheck="true"># 下面两个description,keywords，需要填上，如果想让搜索引擎收录，这个做SEO优化必不可忽视的两个属性</span><span class="token key atrule">description</span><span class="token punctuation">:</span> 专注于Web<span class="token punctuation">,</span>分享生活<span class="token punctuation">,</span>分享知识  <span class="token comment" spellcheck="true">#网站描述</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>HTML<span class="token punctuation">,</span> CSS<span class="token punctuation">,</span> JavaScript<span class="token punctuation">,</span> JQuery<span class="token punctuation">,</span> React<span class="token punctuation">,</span> Vue.js等<span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#网站的关键词</span><span class="token key atrule">author</span><span class="token punctuation">:</span> YangAir  <span class="token comment" spellcheck="true">#作者，文章版权所显示的</span><span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN  <span class="token comment" spellcheck="true">#网站语言，不填写，默认为英文</span><span class="token key atrule">timezone</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true">#时区，可以不填写</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-修改主题的-logo-图和-favicon-图标"><a href="#2-修改主题的-logo-图和-favicon-图标" class="headerlink" title="2. 修改主题的 logo 图和 favicon 图标"></a>2. 修改主题的 logo 图和 favicon 图标</h4><p>打开你的主题配置文件，找到如下的配置，将其更改为你的 logo 和 favicon 路径即可：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 配置网站favicon和网站LOGO</span><span class="token key atrule">favicon</span><span class="token punctuation">:</span> /favicon.png<span class="token key atrule">logo</span><span class="token punctuation">:</span> /favicon.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-去掉右上角的-github-图标"><a href="#3-去掉右上角的-github-图标" class="headerlink" title="3. 去掉右上角的 github 图标"></a>3. 去掉右上角的 github 图标</h4><p>打开你的主题配置文件，找到下面的配置:</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Whether to display fork me on github icon and link, default true, You can change it to your repo address</span><span class="token comment" spellcheck="true"># 配置是否在 header 中显示 fork me on github 的图标，默认为true，你可以修改为你的仓库地址.</span><span class="token key atrule">githubLink</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/blinkfox/hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery  <span class="token key atrule">title</span><span class="token punctuation">:</span> Fork Me<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将 <strong>enable</strong> 的属性值由 <strong>true</strong> 改为 <strong>false</strong> 即可。</p><h4 id="4-去掉主页的-Github-按钮"><a href="#4-去掉主页的-Github-按钮" class="headerlink" title="4. 去掉主页的 Github 按钮"></a>4. 去掉主页的 Github 按钮</h4><p>打开主题配置文件，找到下面的配置：</p><pre><code># 首页 banner 中的第二个按钮的配置，包括按钮的显示名称、font awesome图标和按钮的超链接.indexbtn:  enable: true  name: Github  icon: fab fa-github-alt  url: https://github.com/blinkfox/hexo-theme-matery</code></pre><p>将 <strong>enable</strong> 属性值由 <strong>true</strong> 改为 <strong>false</strong> 即可。</p><h4 id="5-修改社交链接"><a href="#5-修改社交链接" class="headerlink" title="5. 修改社交链接"></a>5. 修改社交链接</h4><p>主页 banner 图中显示的社交链接与底部的社交链接是同步修改的，打开主题配置文件，将社交链接信息修改为你的信息。修改如下:</p><pre><code># 首页 banner 中的第二行个人信息配置，留空即不启用socialLink:  github:  https://github.com/blinkfox  email: 1181062873@qq.com  facebook: # https://www.facebook.com/xxx  twitter: # https://twitter.com/xxx  qq: 1181062873  weibo: # https://weibo.com/xxx  zhihu: # https://www.zhihu.com/xxx  rss: true # true、false</code></pre><p>如果想添加简书，CSDN，掘金，博客园等等，需要在主题配置文件添加相关配置，如下是我个人的配置：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">socialLink</span><span class="token punctuation">:</span>  <span class="token key atrule">qq</span><span class="token punctuation">:</span> <span class="token number">1035800145</span>  <span class="token key atrule">weixin</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/Yafine/Yafine<span class="token punctuation">-</span>imgs/images/wechat.png  <span class="token key atrule">github</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/Yafine  <span class="token key atrule">email</span><span class="token punctuation">:</span> mailto<span class="token punctuation">:</span>1035800145@qq.com  <span class="token key atrule">facebook</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://www.facebook.com/xxx</span>  <span class="token key atrule">twitter</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://twitter.com/xxx</span>  <span class="token key atrule">weibo</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># https://weibo.com/xxx</span>  <span class="token key atrule">zhihu</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.zhihu.com/people/xuan<span class="token punctuation">-</span>tian<span class="token punctuation">-</span>40<span class="token punctuation">-</span>64/activities  <span class="token key atrule">juejin</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//juejin.im/user/5a902053f265da4e7527ae71/activities  <span class="token key atrule">csdn</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//blog.csdn.net/victoryxa  <span class="token key atrule">jianshu</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.jianshu.com/u/3b3856869772  <span class="token key atrule">cnblogs</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.cnblogs.com/yafine/  <span class="token key atrule">rss</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># true、false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中的 <code>weixin</code> 我是用的图片链接，会跳转到一个新的标签页，之后还需要修改 <code>ejs</code> 文件，文件在主题目录下的 <code>layout</code> 文件夹下的<code>_partial</code> 文件夹，修改 <code>social-link.ejs</code>，添加相关的配置，我个人添加的配置如下：</p><pre><code>javascript&lt;% if (theme.socialLink.jianshu) { %&gt;    &lt;a href="&lt;%= theme.socialLink.jianshu %&gt;" class="tooltipped" target="_blank" data-tooltip="关注我的简书: &lt;%= theme.socialLink.jianshu %&gt;" data-position="top" data-delay="50"&gt;        &lt;i class="fab fa-jianshu"&gt;简&lt;/i&gt;    &lt;/a&gt;&lt;% } %&gt;&lt;% if (theme.socialLink.csdn) { %&gt;    &lt;a href="&lt;%= theme.socialLink.csdn %&gt;" class="tooltipped" target="_blank" data-tooltip="关注我的CSDN: &lt;%= theme.socialLink.csdn %&gt;" data-position="top" data-delay="50"&gt;        &lt;i class="fab fa-csdn"&gt;C&lt;/i&gt;    &lt;/a&gt;&lt;% } %&gt;&lt;% if (theme.socialLink.juejin) { %&gt;    &lt;a href="&lt;%= theme.socialLink.juejin %&gt;" class="tooltipped" target="_blank" data-tooltip="关注我的掘金: &lt;%= theme.socialLink.juejin %&gt;" data-position="top" data-delay="50"&gt;        &lt;i class="fab fa-juejin"&gt;掘&lt;/i&gt;    &lt;/a&gt;&lt;% } %&gt;&lt;% if (theme.socialLink.cnblogs) { %&gt;    &lt;a href="&lt;%= theme.socialLink.cnblogs %&gt;" class="tooltipped" target="_blank" data-tooltip="关注我的博客园: &lt;%= theme.socialLink.cnblogs %&gt;" data-position="top" data-delay="50"&gt;        &lt;i class="fab fa-juejin"&gt;博&lt;/i&gt;    &lt;/a&gt;&lt;% } %&gt;&lt;% if (theme.socialLink.weixin) { %&gt;    &lt;a href="&lt;%= theme.socialLink.weixin %&gt;" class="tooltipped" target="_blank" data-tooltip="微信联系我: &lt;%= theme.socialLink.weixin %&gt;" data-position="top" data-delay="50"&gt;        &lt;i class="fab fa-weixin"&gt;&lt;/i&gt;    &lt;/a&gt;&lt;% } %&gt;</code></pre><h4 id="6-去掉-banner-图的动态滤镜颜色并修改导航栏颜色"><a href="#6-去掉-banner-图的动态滤镜颜色并修改导航栏颜色" class="headerlink" title="6. 去掉 banner 图的动态滤镜颜色并修改导航栏颜色"></a>6. 去掉 banner 图的动态滤镜颜色并修改导航栏颜色</h4><ol><li>去掉动态滤镜颜色</li></ol><p>打开 <code>themes/matery/source/css/matery.css</code> 文件，查找下面的代码块，然后将其注释即可。如下：</p><pre><code>css.bg-cover:after {    -webkit-animation: rainbow 60s infinite;    animation: rainbow 60s infinite;}</code></pre><p>或者是找到如下代码，将其注释掉即可：</p><pre><code>css/*如果想去掉banner图的颜色渐变效果，请将以下的css属性注释掉或者删除掉即可*/@-webkit-keyframes rainbow {   /* 动态切换背景颜色. */}@keyframes rainbow {    /* 动态切换背景颜色. */}</code></pre><p>上面的两段代码是有关联的，将<code>.bg-cover:after</code> 这段代码注释掉，上面的代码就不会起作用了。</p><ol><li>修改导航栏颜色及透明效果</li></ol><p>打开 <code>themes/matery/source/css/matery.css</code> 文件，大约在 250 行，有一个<code>.bg-color</code> 属性，修改其属性值即可，代码如下：</p><pre><code>css.bg-color {    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); //修改成自己喜欢的颜色值    opacity: 0.8;  //透明效果 值范围 0~1，看情况自己修改}</code></pre><h4 id="7-修改-banner-图和文章特色图"><a href="#7-修改-banner-图和文章特色图" class="headerlink" title="7. 修改 banner 图和文章特色图"></a>7. 修改 banner 图和文章特色图</h4><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre><code>javascript$('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');</code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><p>如果想改为每小时或者每分钟切换 banner 图的话，需要将 <code>getDay()</code> 改为 <code>getHours()</code> 或者 <code>getMinutes()</code> 即可。</p><p>注意：这个不会自动切换 banner 图，需要刷新页面才可以，更换为每分钟或每小时可能会出现问题，如图片显示不出来，具体的解决办法，自己研究吧😂，可能是图片数量不足，或者是图片命名规范的问题。</p><h4 id="8-添加首页动态打字效果副标题"><a href="#8-添加首页动态打字效果副标题" class="headerlink" title="8. 添加首页动态打字效果副标题"></a>8. 添加首页动态打字效果副标题</h4><p>在主题配置文件中，找到下面的配置：</p><pre><code>yml# 网站副标题，打字效果# 如果有符号 ‘ ，请在 ’ 前面加上 \subtitle:   enable: true  loop: true # 是否循环  showCursor: true # 是否显示光标  startDelay: 300 # 开始延迟  typeSpeed: 100 # 打字速度  backSpeed: 50 # 删除速度  sub1: 志之所向，金石为开，谁能御之？  sub2: 花开不是为了花落，而是为了开的更加灿烂。  sub3: 没有伞的孩子必须努力奔跑！  sub4: 欲望以提升热忱，毅力以磨平高山。  sub5: 如果放弃太早，你永远都不知道自己会错过什么。  sub6: 没有礁石，就没有美丽的浪花；没有挫折，就没有壮丽的人生。</code></pre><p><strong>注意：</strong></p><p>网站打字效果副标题默认有两个，即 <code>sub1</code> 和 <code>sub2</code>，如果想写多个，则需要修改两处地方，首先修改配置文件，如上面所示，在 <code>sub1</code> 和 <code>sub2</code> 后面继续添加即可，然后在去主题目录下的 <code>layout</code> 文件夹下的<code>_partial</code> 文件夹，修改 <code>bg-cover-content.ejs</code> 文件，大约在 12 行左右，如下面所示：</p><pre><code>javascript &lt;div class="description center-align"&gt;     &lt;% if (theme.subtitle.enable) { %&gt;         &lt;span id="subtitle"&gt;&lt;/span&gt;         &lt;script src="https://cdn.jsdelivr.net/npm/typed.js@2.0.11"&gt;&lt;/script&gt;        &lt;script&gt;            var typed = new Typed("#subtitle", {                strings: ['&lt;%= theme.subtitle.sub1 %&gt;',                          '&lt;%= theme.subtitle.sub2 %&gt;',                          '&lt;%= theme.subtitle.sub3 %&gt;',                          '&lt;%= theme.subtitle.sub4 %&gt;',                          '&lt;%= theme.subtitle.sub5 %&gt;',                          '&lt;%= theme.subtitle.sub6 %&gt;'],                 startDelay: &lt;%= theme.subtitle.startDelay %&gt;,                 typeSpeed: &lt;%= theme.subtitle.typeSpeed %&gt;,                 loop: &lt;%= theme.subtitle.loop %&gt;,                    backSpeed: &lt;%= theme.subtitle.backSpeed %&gt;,                 showCursor: &lt;%= theme.subtitle.showCursor %&gt;              });          &lt;/script&gt;      &lt;% } else { %&gt;            &lt;%= config.description %&gt;      &lt;% } %&gt;&lt;/div&gt;</code></pre><h4 id="9-动态标题"><a href="#9-动态标题" class="headerlink" title="9.动态标题"></a>9.动态标题</h4><p>实现方法，引入 js 文件，在主题文件下的 <code>/source/js/</code> 下新建 <code>FunnyTitle.js</code>，然后在添加到 <code>themes/matery/layout/layout.ejs</code> 或者添加到 <code>themes/matery/layout/_partial/head.ejs</code>，其代码如下：</p><pre><code>javascript&lt;!--浏览器搞笑标题--&gt; var OriginTitle = document.title; var titleTime; document.addEventListener('visibilitychange', function () {     if (document.hidden) {         $('[rel="icon"]').attr('href', "https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png");         document.title = 'ヽ(●-`Д´-)ノ你要玩捉迷藏嘛';         clearTimeout(titleTime);     }     else {         $('[rel="icon"]').attr('href', "https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/favicon.png");         document.title = 'ヾ(Ő∀Ő3)ノ好哦！' + OriginTitle;         titleTime = setTimeout(function () {             document.title = OriginTitle;         }, 2000);     } });</code></pre><p>或者直接在 <code>themes/matery/layout/layout.ejs</code> 文件中添加如下代码：</p><pre><code>javascript&lt;script type="text/javascript"&gt;    var OriginTitile=document.title,st;    document.addEventListener("visibilitychange",function(){        document.hidden?(document.title="ヽ(●-`Д´-)ノ你要玩捉迷藏嘛",clearTimeout(st)):(document.title="(Ő∀Ő3)ノ好哦！",st=setTimeout(function(){document.title=OriginTitile},3e3))    })&lt;/script&gt;</code></pre><h4 id="10-修改导航栏颜色以及透明效果"><a href="#10-修改导航栏颜色以及透明效果" class="headerlink" title="10.修改导航栏颜色以及透明效果"></a>10.修改导航栏颜色以及透明效果</h4><p>打开 <code>themes/matery/source/css/matery.css</code> 文件，大约在 250 行，有一个<code>.bg-color</code> 属性，修改其属性值即可，代码如下：</p><pre><code>css.bg-color {    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%); //修改成自己喜欢的颜色值    opacity: 0.8;  //透明效果 值范围 0~1，看情况自己修改}</code></pre><h4 id="11-添加动态诗词"><a href="#11-添加动态诗词" class="headerlink" title="11. 添加动态诗词"></a>11. 添加动态诗词</h4><p>采用的是<a href="https://www.jinrishici.com/">今日诗词</a>，每次返回一句诗词，根据时间、地点、天气、事件智能推荐。官网有 <a href="https://www.jinrishici.com/doc/">API 文档</a>，可以去看一下，有多种安装方式，最简单的方式就是从官网获取代码，在 <code>/themes/matery/layout/_partial/head.ejs</code> 添加下面的一行代码：</p><pre><code>javascript&lt;script src="https://sdk.jinrishici.com/v2/browser/jinrishici.js" charset="utf-8"&gt;&lt;/script&gt;</code></pre><p>然后再将 <code>/themes/matery/layout/_partial/bg-cover-content.ejs</code> 中的 <code>&lt;%= config.description %&gt;</code> 修改为 <code>&lt;%- '&lt;span id="jinrishici-sentence"&gt;正在加载今日诗词....&lt;/span&gt;' %&gt;</code>，这个使用前提是将主题配置文件的 <code>subtitle</code> 的值改为 <code>false</code>。</p><h4 id="12-鼠标点击文字特效"><a href="#12-鼠标点击文字特效" class="headerlink" title="12.鼠标点击文字特效"></a>12.鼠标点击文字特效</h4><p>实现方法，引入 js 文件，在主题文件下的 <code>/source/js/</code> 下新建 <code>click_show_text.js</code>，其代码如下：</p><pre><code>javascript复制成功var a_idx = 0;jQuery(document).ready(function ($) {    $("body").click(function (e) {        var a = new Array("富强", "民主", "文明", "和谐", "自由", "平等", "公正", "法治", "爱国", "敬业", "诚信", "友善");        var $i = $("&lt;span/&gt;").text(a[a_idx]);        a_idx = (a_idx + 1) % a.length;        var x = e.pageX,            y = e.pageY;        $i.css({            "z-index": 5,            "top": y - 20,            "left": x,            "position": "absolute",            "font-weight": "bold",            "color": "#FF0000"        });        $("body").append($i);        $i.animate({                "top": y - 180,                "opacity": 0            },            3000,            function () {                $i.remove();            });    });    setTimeout('delay()', 2000);});function delay() {    $(".buryit").removeAttr("onclick");}</code></pre><p>或者使用我的 cdn 链接，理论上一直有效 <strong><a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/click_show_text.js">https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/click_show_text.js</a></strong>，然后在添加到 <code>themes/matery/layout/layout.ejs</code>。</p><h4 id="13-鼠标点击礼花特效"><a href="#13-鼠标点击礼花特效" class="headerlink" title="13. 鼠标点击礼花特效"></a>13. 鼠标点击礼花特效</h4><p>文件地址：<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.1.3/source/js/lihua.js">传送门</a></p><p>在 <strong>matery/source/js/</strong> 目录下新建 <strong>lihua.js</strong>，然后打开上面的传送门网址，将代码复制粘贴进 js 文件里，然后在 <strong>layout.ejs</strong> 文件里引用，最后本地运行查看效果即可。</p><h4 id="14-自定义鼠标样式"><a href="#14-自定义鼠标样式" class="headerlink" title="14. 自定义鼠标样式"></a>14. 自定义鼠标样式</h4><p>建议大家下载鼠标指针样式的格式为 ico 格式，大小为 16<em>16，或者 24</em>24 的。</p><p>首先将鼠标样式下载到本地，推荐大家一个网站，可以免费下载，不过需要登录一下：网址为：<a href="https://www.easyicon.net/">https://www.easyicon.net/</a></p><p>以我的为例，我将鼠标指针样式放在了主题文件夹下的 medias 目录下，然后打开主题文件夹下的 <strong>my.css</strong> 文件，添加内容如下：</p><pre><code>css*{    cursor: url("/medias/cursor1.ico"),auto!important;}:active{    cursor: url("/medias/cursor2.ico"),auto!important;}</code></pre><p>然后在本地运行查看效果即可</p><h4 id="15-添加鼠标彩虹星星掉落跟随效果"><a href="#15-添加鼠标彩虹星星掉落跟随效果" class="headerlink" title="15. 添加鼠标彩虹星星掉落跟随效果"></a>15. 添加鼠标彩虹星星掉落跟随效果</h4><p>在 <code>themes/matery/source/js</code> 目录下新建 <code>cursor.js</code> 文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@3.3.4/source/js/cursor.js">传送门</a>，将内容复制粘贴到 cursor.js 即可。</p><p>然后再 <code>themes/matery/layout/layout.ejs</code> 文件内添加下面的内容：</p><pre><code>javascript&lt;script src="/js/cursor.js"&gt;&lt;/script&gt;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
